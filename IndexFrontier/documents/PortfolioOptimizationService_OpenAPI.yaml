openapi: 3.0.3
info:
  title: Portfolio Optimization Service API
  version: 1.0.0
  description: Efficient frontier job orchestration APIs.
servers:
  - url: https://api.indexfrontier.com/optimization
security:
  - bearerAuth: []
paths:
  /jobs:
    post:
      operationId: createOptimizationJob
      summary: Submit efficient frontier job
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OptimizationJobRequest'
      responses:
        '202':
          description: Job accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptimizationJobAccepted'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /jobs/{jobId}:
    get:
      operationId: getOptimizationJob
      summary: Get optimization job status and summary
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - $ref: '#/components/parameters/JobId'
      responses:
        '200':
          description: Job detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptimizationJob'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /frontiers:
    get:
      operationId: listFrontiers
      summary: List frontier outputs
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - in: query
          name: constraintSetId
          schema:
            type: string
            format: uuid
        - in: query
          name: objective
          schema:
            type: string
            enum: [max_sharpe, min_variance, target_return]
        - in: query
          name: fromDate
          schema:
            type: string
            format: date-time
        - in: query
          name: toDate
          schema:
            type: string
            format: date-time
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
        - in: query
          name: pageSize
          schema:
            type: integer
            minimum: 1
            maximum: 200
            default: 25
      responses:
        '200':
          description: Frontier list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrontierListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /frontiers/{frontierId}:
    get:
      operationId: getFrontier
      summary: Get frontier detail
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - $ref: '#/components/parameters/FrontierId'
      responses:
        '200':
          description: Frontier detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Frontier'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /constraints:
    post:
      operationId: upsertConstraintSet
      summary: Create or update constraint set
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConstraintSetRequest'
      responses:
        '201':
          description: Constraint set created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintSet'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    get:
      operationId: listConstraintSets
      summary: List active constraint sets
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - in: query
          name: includeInactive
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Constraint set list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintSetListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    TenantHeader:
      in: header
      name: X-Tenant-Id
      required: true
      schema:
        type: string
        format: uuid
      description: Tenant context identifier.
    JobId:
      in: path
      name: jobId
      required: true
      schema:
        type: string
        format: uuid
    FrontierId:
      in: path
      name: frontierId
      required: true
      schema:
        type: string
        format: uuid
  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Conflict:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    UnprocessableEntity:
      description: Validation error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationErrorResponse'
  schemas:
    OptimizationJobRequest:
      type: object
      required: [constraintSetId, objective]
      properties:
        constraintSetId:
          type: string
          format: uuid
        objective:
          type: string
          enum: [max_sharpe, min_variance, target_return]
        targetReturn:
          type: number
          format: float
          minimum: 0
          maximum: 0.5
        riskModel:
          type: string
          enum: [historical, ewma]
          default: historical
        rebalanceFrequency:
          type: string
          enum: [daily, weekly, monthly]
          default: monthly
    OptimizationJobAccepted:
      type: object
      required: [jobId, status]
      properties:
        jobId:
          type: string
          format: uuid
        status:
          type: string
          enum: [queued]
    OptimizationJob:
      type: object
      required: [jobId, status, createdAt]
      properties:
        jobId:
          type: string
          format: uuid
        status:
          type: string
          enum: [queued, running, completed, failed]
        constraintSetId:
          type: string
          format: uuid
        objective:
          type: string
        progressPct:
          type: number
          format: float
        startedAt:
          type: string
          format: date-time
        completedAt:
          type: string
          format: date-time
        errorCode:
          type: string
        errorMessage:
          type: string
        frontierId:
          type: string
          format: uuid
    FrontierListResponse:
      type: object
      required: [data, meta]
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/FrontierSummary'
        meta:
          $ref: '#/components/schemas/PagedResponseMeta'
    FrontierSummary:
      type: object
      required: [frontierId, objective, asOf]
      properties:
        frontierId:
          type: string
          format: uuid
        jobId:
          type: string
          format: uuid
        objective:
          type: string
        constraintSetId:
          type: string
          format: uuid
        asOf:
          type: string
          format: date-time
        sharpeRatio:
          type: number
          format: float
        volatility:
          type: number
          format: float
    Frontier:
      allOf:
        - $ref: '#/components/schemas/FrontierSummary'
        - type: object
          properties:
            metrics:
              type: object
              properties:
                expectedReturn:
                  type: number
                  format: float
                maxDrawdown:
                  type: number
                  format: float
            points:
              type: array
              items:
                type: object
                required: [risk, expectedReturn, allocations]
                properties:
                  risk:
                    type: number
                    format: float
                  expectedReturn:
                    type: number
                    format: float
                  allocations:
                    type: array
                    items:
                      type: object
                      required: [symbol, weight]
                      properties:
                        symbol:
                          type: string
                        weight:
                          type: number
                          format: float
    ConstraintSetRequest:
      type: object
      required: [constraintSetId]
      properties:
        constraintSetId:
          type: string
          format: uuid
        maxWeightPerAsset:
          type: number
          format: float
          maximum: 1
        minWeightPerAsset:
          type: number
          format: float
          minimum: 0
        turnoverLimit:
          type: number
          format: float
        exclusions:
          type: array
          items:
            type: string
        customInequalities:
          type: array
          items:
            type: object
            required: [lhs, operator, rhs]
            properties:
              lhs:
                type: string
              operator:
                type: string
                enum: [<=,>=,=]
              rhs:
                type: number
                format: float
    ConstraintSet:
      type: object
      required: [constraintSetId, version, isActive]
      properties:
        constraintSetId:
          type: string
          format: uuid
        version:
          type: integer
        isActive:
          type: boolean
        maxWeightPerAsset:
          type: number
          format: float
        minWeightPerAsset:
          type: number
          format: float
        turnoverLimit:
          type: number
          format: float
        exclusions:
          type: array
          items:
            type: string
        customInequalities:
          type: array
          items:
            type: object
        validFrom:
          type: string
          format: date-time
        validTo:
          type: string
          format: date-time
    ConstraintSetListResponse:
      type: object
      required: [data]
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ConstraintSet'
    PagedResponseMeta:
      type: object
      required: [page, pageSize, total]
      properties:
        page:
          type: integer
        pageSize:
          type: integer
        total:
          type: integer
    ErrorResponse:
      type: object
      required: [code, message]
      properties:
        code:
          type: string
        message:
          type: string
        correlationId:
          type: string
          format: uuid
    ValidationErrorResponse:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
        - type: object
          properties:
            details:
              type: array
              items:
                type: object
                required: [field, message]
                properties:
                  field:
                    type: string
                  message:
                    type: string

openapi: 3.0.3
info:
  title: IndexConstituentService API
  version: 1.0.0
  description: REST API for managing S&P 500 Top 10 constituents and change events.
servers:
  - url: https://api.toptenfrontier.example.com/index-constituent
    description: Production
  - url: https://staging.toptenfrontier.example.com/index-constituent
    description: Staging
security:
  - bearerAuth: []
paths:
  /v1/constituents/top10:
    get:
      summary: Get top 10 S&P 500 constituents
      operationId: getTop10
      parameters:
        - in: query
          name: asOf
          schema:
            type: string
            format: date-time
          description: Optional timestamp to retrieve historical ranking.
        - in: query
          name: orgId
          schema:
            type: string
            format: uuid
          description: Optional override for organization scope (admin only).
      responses:
        '200':
          description: Top 10 records retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Top10Response'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: No data for the requested timestamp.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/ServerError'
  /v1/constituents/history:
    get:
      summary: List historical top 10 rankings
      operationId: listTop10History
      parameters:
        - in: query
          name: start
          schema:
            type: string
            format: date-time
        - in: query
          name: end
          schema:
            type: string
            format: date-time
        - in: query
          name: cursor
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
      responses:
        '200':
          description: Historical snapshots.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoryResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/ServerError'
  /v1/constituents/changes:
    get:
      summary: Get constituent change events
      operationId: getChangeEvents
      parameters:
        - in: query
          name: since
          required: true
          schema:
            type: string
            format: date-time
        - in: query
          name: type
          schema:
            type: string
            enum: [ADDITION, REMOVAL, RERANK]
      responses:
        '200':
          description: Change events since the requested timestamp.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ChangeEvent'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/ServerError'
  /v1/constituents/sync:
    post:
      summary: Trigger on-demand constituent sync
      operationId: triggerSync
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncRequest'
      responses:
        '202':
          description: Sync job accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Insufficient privileges.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Sync already running.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/RateLimited'
        '500':
          $ref: '#/components/responses/ServerError'
  /v1/constituents/providers/status:
    get:
      summary: Retrieve upstream provider status
      operationId: getProviderStatus
      responses:
        '200':
          description: Provider health report.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderStatusResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/ServerError'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Top10Record:
      type: object
      required: [symbol, name, sector, rank, marketCapUsd, effectiveAt]
      properties:
        symbol:
          type: string
          example: AAPL
        name:
          type: string
        sector:
          type: string
        rank:
          type: integer
          minimum: 1
          maximum: 10
        marketCapUsd:
          type: string
          pattern: '^\\d+(\\.\\d{1,2})?$'
        weightEstimate:
          type: number
          format: float
        effectiveAt:
          type: string
          format: date-time
        esgScore:
          type: number
          minimum: 0
          maximum: 100
    Top10Response:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Top10Record'
    HistorySnapshot:
      type: object
      required: [snapshotId, effectiveAt, constituents]
      properties:
        snapshotId:
          type: string
          format: uuid
        effectiveAt:
          type: string
          format: date-time
        constituents:
          type: array
          items:
            $ref: '#/components/schemas/Top10Record'
    HistoryResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/HistorySnapshot'
        nextCursor:
          type: string
          nullable: true
    ChangeEvent:
      type: object
      required: [eventId, type, symbol, effectiveAt]
      properties:
        eventId:
          type: string
          format: uuid
        type:
          type: string
          enum: [ADDITION, REMOVAL, RERANK]
        symbol:
          type: string
        previousSymbol:
          type: string
          nullable: true
        effectiveAt:
          type: string
          format: date-time
        metadata:
          type: object
          additionalProperties: true
    SyncRequest:
      type: object
      required: [forced]
      properties:
        forced:
          type: boolean
        providerOverride:
          type: string
          enum: [POLYGON, ALPHAVANTAGE]
    SyncResponse:
      type: object
      properties:
        jobId:
          type: string
          format: uuid
        status:
          type: string
          enum: [QUEUED, RUNNING, COMPLETED]
    ProviderStatus:
      type: object
      required: [provider, status]
      properties:
        provider:
          type: string
        status:
          type: string
        lastSuccessAt:
          type: string
          format: date-time
          nullable: true
        quotaRemaining:
          type: integer
          nullable: true
        errorCount:
          type: integer
    ProviderStatusResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ProviderStatus'
    ErrorResponse:
      type: object
      required: [code, message]
      properties:
        code:
          type: string
        message:
          type: string
        details:
          type: object
          additionalProperties: true
  responses:
    Unauthorized:
      description: JWT is missing or invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    UnprocessableEntity:
      description: Request validation failed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    ServerError:
      description: Unexpected server error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    RateLimited:
      description: Rate limit exceeded.
      headers:
        Retry-After:
          schema:
            type: integer
            format: int32
            minimum: 1
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

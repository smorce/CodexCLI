openapi: 3.0.3
info:
  title: OptimizationService API
  version: 1.0.0
  description: Efficient frontier optimization APIs.
servers:
  - url: https://api.toptenfrontier.example.com/optimization
    description: Production
  - url: https://staging.toptenfrontier.example.com/optimization
    description: Staging
security:
  - bearerAuth: []
paths:
  /v1/optimization/jobs:
    post:
      summary: Create optimization job
      operationId: createJob
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OptimizationRequest'
      responses:
        '202':
          description: Job queued successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/RateLimited'
        '500':
          $ref: '#/components/responses/ServerError'
  /v1/optimization/jobs/{jobId}:
    get:
      summary: Fetch optimization job status and results
      operationId: getJob
      parameters:
        - in: path
          name: jobId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Job payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDetail'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /v1/optimization/jobs/{jobId}/cancel:
    post:
      summary: Cancel queued or running job
      operationId: cancelJob
      parameters:
        - in: path
          name: jobId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Job cancelled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/ServerError'
  /v1/optimization/frontier:
    get:
      summary: Retrieve latest frontier snapshot
      operationId: getFrontier
      parameters:
        - in: query
          name: asOf
          schema:
            type: string
            format: date-time
        - in: query
          name: objective
          schema:
            type: string
            enum: [MAX_RETURN, MIN_RISK, MAX_SHARPE]
      responses:
        '200':
          description: Frontier summary.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrontierSummary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /v1/optimization/frontier/preview:
    post:
      summary: Run lightweight synchronous frontier preview
      operationId: previewFrontier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OptimizationRequest'
      responses:
        '200':
          description: Preview metrics and feasibility.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/RateLimited'
        '500':
          $ref: '#/components/responses/ServerError'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    OptimizationRequest:
      type: object
      required: [objective, universe]
      properties:
        objective:
          type: string
          enum: [MAX_RETURN, MIN_RISK, MAX_SHARPE]
        riskFreeRate:
          type: number
          format: float
        constraints:
          $ref: '#/components/schemas/ConstraintSet'
        universe:
          type: array
          minItems: 2
          maxItems: 10
          items:
            type: string
        asOf:
          type: string
          format: date-time
    ConstraintSet:
      type: object
      properties:
        minWeightPerSymbol:
          type: number
          format: float
          minimum: 0
        maxWeightPerSymbol:
          type: number
          format: float
          maximum: 1
        targetVolatility:
          type: number
          format: float
          minimum: 0
          maximum: 1
          nullable: true
        sectorCaps:
          type: object
          additionalProperties:
            type: number
            format: float
    JobResponse:
      type: object
      properties:
        jobId:
          type: string
          format: uuid
        status:
          type: string
          enum: [QUEUED, RUNNING, SUCCEEDED, FAILED, CANCELLED]
    FrontierPoint:
      type: object
      required: [sequence, expectedReturn, volatility]
      properties:
        sequence:
          type: integer
        expectedReturn:
          type: number
          format: float
        volatility:
          type: number
          format: float
        sharpeRatio:
          type: number
          format: float
          nullable: true
        weights:
          type: object
          additionalProperties:
            type: number
            format: float
    JobDetail:
      type: object
      properties:
        jobId:
          type: string
          format: uuid
        status:
          type: string
          enum: [QUEUED, RUNNING, SUCCEEDED, FAILED, CANCELLED]
        objective:
          type: string
        request:
          $ref: '#/components/schemas/OptimizationRequest'
        summary:
          type: object
          additionalProperties: true
        frontier:
          type: array
          items:
            $ref: '#/components/schemas/FrontierPoint'
        allocations:
          type: array
          items:
            $ref: '#/components/schemas/Allocation'
        error:
          $ref: '#/components/schemas/ErrorResponse'
          nullable: true
    Allocation:
      type: object
      required: [label, weights]
      properties:
        label:
          type: string
        weights:
          type: object
          additionalProperties:
            type: number
            format: float
        metrics:
          type: object
          additionalProperties:
            type: number
            format: float
    FrontierSummary:
      type: object
      properties:
        asOf:
          type: string
          format: date-time
        objective:
          type: string
        points:
          type: array
          items:
            $ref: '#/components/schemas/FrontierPoint'
    PreviewResponse:
      type: object
      properties:
        feasible:
          type: boolean
        message:
          type: string
        metrics:
          type: object
          properties:
            expectedReturn:
              type: number
              format: float
            volatility:
              type: number
              format: float
            sharpe:
              type: number
              format: float
        constraintViolations:
          type: array
          items:
            type: string
    ErrorResponse:
      type: object
      required: [code, message]
      properties:
        code:
          type: string
        message:
          type: string
        details:
          type: object
          additionalProperties: true
  responses:
    Unauthorized:
      description: JWT is missing or invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Forbidden:
      description: Insufficient privileges.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Conflict:
      description: Conflicting job state or existing job.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    NotFound:
      description: Resource not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    UnprocessableEntity:
      description: Request validation failed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    RateLimited:
      description: Rate limit exceeded.
      headers:
        Retry-After:
          schema:
            type: integer
            minimum: 1
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    ServerError:
      description: Unexpected server error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
